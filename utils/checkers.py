#
# import states
#
# async def check_user_registration(message, state):
#     user_id = message.from_user.id
#     player_data = get_townhall_table(user_id)
#
#     if player_data is None:
#         reply_msg = await message.reply(
#             text="üè≥Ô∏è –î–ª—è –Ω–∞—á–∞–ª–∞ –Ω–∞–∑–æ–≤–∏\n"
#                  "—Å–≤–æ—é —Å—Ç—Ä–∞–Ω—É, –æ—Ç–≤–µ—Ç–∏–≤\n"
#                  "–Ω–∞ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ.\n\n"
#                  "<i>–§–æ—Ä–º–∞—Ç:\n"
#                  "a-z, 0-9, –Ω–∏–∂–Ω–∏–π –ø—Ä–æ—á–µ—Ä–∫,\n"
#                  "–±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤</i>",
#         )
#         await state.update_data({"reply_msg": reply_msg})
#         await states.Reg.first()
#         return True
#
#     return False

# async def check_user_registration(message, state):
#     user_id = message.from_user.id
#     player_data = await get_townhall_table(user_id)
#
#     if player_data is None:
#         reply_msg = await message.reply(
#             text="üè≥Ô∏è –î–ª—è –Ω–∞—á–∞–ª–∞ –Ω–∞–∑–æ–≤–∏\n"
#                  "—Å–≤–æ—é —Å—Ç—Ä–∞–Ω—É, –æ—Ç–≤–µ—Ç–∏–≤\n"
#                  "–Ω–∞ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ.\n\n"
#                  "<i>–§–æ—Ä–º–∞—Ç:\n"
#                  "a-z, 0-9, –Ω–∏–∂–Ω–∏–π –ø—Ä–æ—á–µ—Ä–∫,\n"
#                  "–±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤</i>",
#         )
#         await state.update_data({"reply_msg": reply_msg})
#         await states.Reg.first()
#         return True
#
#     return False


